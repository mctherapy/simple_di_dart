// Mocks generated by Mockito 5.4.4 from annotations
// in simple_di/test/service_container_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:simple_di/src/abstraction/service_descriptor.dart' as _i2;
import 'package:simple_di/src/service_container.dart' as _i4;
import 'package:simple_di/src/service_lifetime.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ServiceDescriptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockServiceDescriptor extends _i1.Mock implements _i2.ServiceDescriptor {
  @override
  _i3.ServiceLifetime get lifetime => (super.noSuchMethod(
        Invocation.getter(#lifetime),
        returnValue: _i3.ServiceLifetime.singleton,
        returnValueForMissingStub: _i3.ServiceLifetime.singleton,
      ) as _i3.ServiceLifetime);

  @override
  bool get constructed => (super.noSuchMethod(
        Invocation.getter(#constructed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  TRequested? unsafeProvideWith<TRequested>(_i4.ServiceContainer? sp) =>
      (super.noSuchMethod(
        Invocation.method(
          #unsafeProvideWith,
          [sp],
        ),
        returnValueForMissingStub: null,
      ) as TRequested?);
}
